<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:demo.Style">
    <ControlTemplate x:Key="DefualtCheckBoxTemplate" TargetType="CheckBox" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <Grid Background="#00FFFFFF" Name="templateRoot" SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Border BorderThickness="{TemplateBinding Border.BorderThickness}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Name="checkBoxBorder" Margin="1,1,1,1" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}">
                <Grid Name="markGrid">
                    <Path Data="F1M9.97498,1.22334L4.6983,9.09834 4.52164,9.09834 0,5.19331 1.27664,3.52165 4.255,6.08833 8.33331,1.52588E-05 9.97498,1.22334z" Stretch="None" Fill="#FF212121" Name="optionMark" Margin="1,1,1,1" Opacity="0" />
                    <Rectangle Fill="#FF212121" Name="indeterminateMark" Margin="2,2,2,2" Opacity="0" />
                </Grid>
            </Border>
            <ContentPresenter RecognizesAccessKey="True" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Name="contentPresenter" Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Focusable="False" Grid.Column="1" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ContentControl.HasContent">
                <Setter Property="FrameworkElement.FocusVisualStyle">
                    <Setter.Value>
                        <Style TargetType="IFrameworkInputElement">
                            <Style.Resources>
                                <ResourceDictionary />
                            </Style.Resources>
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Rectangle Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" Margin="14,0,0,0" SnapsToDevicePixels="True" />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="Control.Padding">
                    <Setter.Value>
                        <Thickness>4,-1,0,0</Thickness>
                    </Setter.Value>
                </Setter>
                <Trigger.Value>
                    <s:Boolean>True</s:Boolean>
                </Trigger.Value>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver">
                <Setter Property="Panel.Background" TargetName="checkBoxBorder">
                    <Setter.Value>
                        <SolidColorBrush>#FFF3F9FF</SolidColorBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Border.BorderBrush" TargetName="checkBoxBorder">
                    <Setter.Value>
                        <SolidColorBrush>#FF5593FF</SolidColorBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Shape.Fill" TargetName="optionMark">
                    <Setter.Value>
                        <SolidColorBrush>#FF212121</SolidColorBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Shape.Fill" TargetName="indeterminateMark">
                    <Setter.Value>
                        <SolidColorBrush>#FF212121</SolidColorBrush>
                    </Setter.Value>
                </Setter>
                <Trigger.Value>
                    <s:Boolean>True</s:Boolean>
                </Trigger.Value>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled">
                <Setter Property="Panel.Background" TargetName="checkBoxBorder">
                    <Setter.Value>
                        <SolidColorBrush>#FFE6E6E6</SolidColorBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Border.BorderBrush" TargetName="checkBoxBorder">
                    <Setter.Value>
                        <SolidColorBrush>#FFBCBCBC</SolidColorBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Shape.Fill" TargetName="optionMark">
                    <Setter.Value>
                        <SolidColorBrush>#FF707070</SolidColorBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Shape.Fill" TargetName="indeterminateMark">
                    <Setter.Value>
                        <SolidColorBrush>#FF707070</SolidColorBrush>
                    </Setter.Value>
                </Setter>
                <Trigger.Value>
                    <s:Boolean>False</s:Boolean>
                </Trigger.Value>
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed">
                <Setter Property="Panel.Background" TargetName="checkBoxBorder">
                    <Setter.Value>
                        <SolidColorBrush>#FFD9ECFF</SolidColorBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Border.BorderBrush" TargetName="checkBoxBorder">
                    <Setter.Value>
                        <SolidColorBrush>#FF3C77DD</SolidColorBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Shape.Fill" TargetName="optionMark">
                    <Setter.Value>
                        <SolidColorBrush>#FF212121</SolidColorBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Shape.Fill" TargetName="indeterminateMark">
                    <Setter.Value>
                        <SolidColorBrush>#FF212121</SolidColorBrush>
                    </Setter.Value>
                </Setter>
                <Trigger.Value>
                    <s:Boolean>True</s:Boolean>
                </Trigger.Value>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked">
                <Setter Property="UIElement.Opacity" TargetName="optionMark">
                    <Setter.Value>
                        <s:Double>1</s:Double>
                    </Setter.Value>
                </Setter>
                <Setter Property="UIElement.Opacity" TargetName="indeterminateMark">
                    <Setter.Value>
                        <s:Double>0</s:Double>
                    </Setter.Value>
                </Setter>
                <Trigger.Value>
                    <s:Boolean>True</s:Boolean>
                </Trigger.Value>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked">
                <Setter Property="UIElement.Opacity" TargetName="optionMark">
                    <Setter.Value>
                        <s:Double>0</s:Double>
                    </Setter.Value>
                </Setter>
                <Setter Property="UIElement.Opacity" TargetName="indeterminateMark">
                    <Setter.Value>
                        <s:Double>1</s:Double>
                    </Setter.Value>
                </Setter>
                <Trigger.Value>
                    <x:Null />
                </Trigger.Value>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <!-- 自定义的默认模板 -->
    <ControlTemplate x:Key="YDefualtCheckBoxTemplate" TargetType="CheckBox">
        <Grid Background="#00FFFFFF" Name="templateRoot" SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Border BorderThickness="{TemplateBinding Border.BorderThickness}" 
                    BorderBrush="{TemplateBinding Border.BorderBrush}" 
                    Background="{TemplateBinding Panel.Background}" 
                    Name="checkBoxBorder" Margin="1,1,5,1" 
                    HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" 
                    VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}">
                <Grid Name="markGrid">
                    <Path Data="F1M9.97498,1.22334L4.6983,9.09834 4.52164,9.09834 0,5.19331 1.27664,3.52165 4.255,6.08833 8.33331,1.52588E-05 9.97498,1.22334z" 
                          Stretch="None" Fill="#1578F6" Name="optionMark" Margin="1,1,1,1" Opacity="0" />
                    <Rectangle Fill="#FF212121" Name="indeterminateMark" Margin="2,2,2,2" Opacity="0" />
                </Grid>
            </Border>
            <ContentPresenter RecognizesAccessKey="True" 
                              Content="{TemplateBinding ContentControl.Content}" 
                              ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" 
                              ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" 
                              Name="contentPresenter" Margin="{TemplateBinding Control.Padding}" 
                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" 
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" 
                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" 
                              Focusable="False" Grid.Column="1" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="#F2F2F2" TargetName="checkBoxBorder"/>
                <Setter Property="Foreground" Value="#939393"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="BorderBrush" Value="#D4D4D4" TargetName="checkBoxBorder"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="#D4D4D4" TargetName="checkBoxBorder"/>
                <Setter Property="Background" Value="#F2F2F2" TargetName="checkBoxBorder"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Opacity" Value="1" TargetName="optionMark"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>