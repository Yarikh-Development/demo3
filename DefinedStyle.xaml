<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:demo">
    <Style x:Key="defaultMenuStyle" TargetType="MenuItem">
        <Setter Property="Foreground" Value="#FFFFFF"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Light"/>
    </Style>
    <Style x:Key="leftLineRadioButton" TargetType="RadioButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="#565353"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid>
                        <Border x:Name="border"/>
                        <TextBlock x:Name="textBlock"/>
                        <ContentPresenter x:Name="contenPresenter" Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="#1578F6"/>
                            <Setter Property="FontWeight" Value="Bold"/>
                            <Setter Property="BorderThickness" Value="4 0 0 0" TargetName="border"/>
                            <Setter Property="BorderBrush" Value="#1578F6" TargetName="border"/>
                            <Setter Property="Background" Value="#E7EAED" TargetName="border"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#E7EAED" TargetName="border"/>
                            <Setter Property="Foreground" Value="#1578F6" TargetName="textBlock"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MenuRadioButton" TargetType="RadioButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="#565353"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid>
                        <Border x:Name="border"/>
                        <TextBlock x:Name="textBlock"/>
                        <ContentPresenter x:Name="contenPresenter" Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="#1578F6"/>
                            <Setter Property="FontWeight" Value="Bold"/>
                            <Setter Property="FontSize" Value="20"/>
                            <Setter Property="BorderThickness" Value="0 0 0 2" TargetName="border"/>
                            <Setter Property="Margin" Value="0 0 0 -8" TargetName="border"/>
                            <Setter Property="BorderBrush" Value="#1578F6" TargetName="border"/>
                            <Setter Property="Background" Value="#E7EAED" TargetName="border"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#E7EAED" TargetName="border"/>
                            <Setter Property="Foreground" Value="#1578F6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="defaultRadioButton" TargetType="RadioButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="#565353"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid>
                        <Border x:Name="border"/>
                        <ContentPresenter x:Name="contenPresenter" Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="#1578F6"/>
                            <Setter Property="FontWeight" Value="Bold"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <!--<Setter Property="Background" Value="#E7EAED" TargetName="border"/>-->
                            <Setter Property="Foreground" Value="#1578F6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BackGroundRadioButton" TargetType="RadioButton">
        <Setter Property="Background" Value="#488EE8"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid>
                        <Border x:Name="border"/>
                        <ContentPresenter x:Name="contenPresenter" Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="#FFFFFF"/>
                            <Setter Property="Background" Value="#1578F6" TargetName="border"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#1578F6" TargetName="border"/>
                            <Setter Property="Foreground" Value="#FFFFFF"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="Transparent"  TargetName="border"/>
                            <Setter Property="Foreground" Value="#000000"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ButtonTemplate" TargetType="{x:Type Button}">
        <Border x:Name="Border" BorderBrush="Blue" BorderThickness="2" CornerRadius="5" Background="Red" TextBlock.Foreground="White">
            <!--设置控件的边框，圆角，背景色，字体颜色-->
            <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="Center" VerticalAlignment="Center">
                <!--显示控件的内容-->
            </ContentPresenter>
        </Border>
    </ControlTemplate>
    
    <!-- ButtonsStyle -->
    <Style x:Key="leftLineButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="#565353"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border x:Name="border"/>
                        <TextBlock x:Name="textBlock"/>
                        <ContentPresenter x:Name="contenPresenter" Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter Property="Foreground" Value="#1578F6"/>
                            <Setter Property="FontWeight" Value="Bold"/>
                            <Setter Property="BorderThickness" Value="4 0 0 0" TargetName="border"/>
                            <Setter Property="BorderBrush" Value="#1578F6" TargetName="border"/>
                            <Setter Property="Background" Value="#E7EAED" TargetName="border"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="BorderThickness" Value="0" TargetName="border"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#E7EAED" TargetName="border"/>
                            <Setter Property="Foreground" Value="#1578F6" TargetName="textBlock"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

    <!-- 触碰后颜色变浅，用在窗口调整大小和最小化上 -->
    <Style x:Key="shallowBackgroundButton" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border x:Name="border"/>
                        
                        <ContentPresenter x:Name="contenPresenter" Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FFFFFF" TargetName="border"/>
                            <Setter Property="Opacity" Value="0.4" TargetName="border"/>
                            <Setter Property="BorderThickness" Value="0"/>
                            
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="Black"/>
                            <Setter Property="Opacity" Value="0.2"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- 触碰后背景颜色变红，用在关闭窗口上 -->
    <Style x:Key="redBackgroundButton" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border x:Name="border"/>

                        <ContentPresenter x:Name="contenPresenter" Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#E17E7E" TargetName="border"/>
                            
                            <Setter Property="BorderThickness" Value="0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 触碰和点击后背景颜色改变，用在打印机列表 -->
    <Style x:Key="BackGroundButton" TargetType="Button">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border x:Name="border"/>
                        <ContentPresenter x:Name="contenPresenter" Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- 事件有分顺序的 -->
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" Value="#C4C4C4" TargetName="border"/>
                            <Setter Property="BorderThickness" Value="0" TargetName="border"/>
                        </Trigger>
                        
                        <Trigger Property="IsMouseOver" Value="True">
                            <!--<Setter Property="Background" Value="#E7EAED" TargetName="border"/>-->
                            
                            <Setter Property="Background" Value="#C4C4C4" TargetName="border"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#AAAAAA" TargetName="border"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BackGroundButton2" TargetType="Button">

        <Style.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#AAAAAA" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="#C4C4C4" />
                <Setter Property="BorderThickness" Value="0" />
            </Trigger>

            <Trigger Property="IsMouseOver" Value="True">
                <!--<Setter Property="Background" Value="#E7EAED" TargetName="border"/>-->

                <Setter Property="Background" Value="#C4C4C4" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- 圆角按钮，应用在打印机信息按钮上
         鼠标放上后颜色变为浅蓝色，字体颜色变为浅灰色
         点击后颜色变为浅蓝色
    -->
    <Style x:Key="CornerRadiusButton" TargetType="{x:Type Button}">

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="border" CornerRadius="5"  Background="#1578F6"/>
                        <ContentPresenter x:Name="btnPresenter" Focusable="False" Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          RecognizesAccessKey="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#7BA7E0" TargetName="border"/>
                            <Setter Property="Foreground" Value="#DEDEDE"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#000000" TargetName="border"/>
                        </Trigger>
                        
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" Value="#679EE4" TargetName="border"/>
                            <!--<Setter Property="Foreground" Value="#DEDEDE"/>-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>